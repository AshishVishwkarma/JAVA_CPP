--the previous row means: execute for object types U and S
set nocount on
go
create table #tmp(
	id_obj		int not null, 
	id_part		int not null, 
	id_order	int not null, 
	txt			varchar(255),
	primary key (id_obj,id_part,id_order)
)
go
declare ccolumn cursor for	
select	sysobjects.id id,
		sysobjects.name tabname, 
		syscolumns.name colname,
		systypes.name coltype,
		syscolumns.length collength,
		syscolumns.status&8 as is_null,
		syscolumns.status&128 as is_identity,
		syscolumns.cdefault,
		syscomments.text defval,
		syscolumns.prec prec,
		syscolumns.scale scale,
		syscolumns.colid colid
from	sysobjects, syscolumns, systypes, syscomments
where	sysobjects.id=object_id('dbo.product') and  
		syscolumns.id = sysobjects.id and
		systypes.usertype = syscolumns.usertype and
		syscolumns.cdefault *= syscomments.id and
		upper(syscomments.text) like 'DEFAULT %'
order by tabname,syscolumns.colid
go
declare		cindex cursor for
select 		id,
			name,
			keycnt,
			indid,
			status,
			status2
from   		sysindexes
where	  	indid > 0
and			id=object_id('dbo.product')
and 		status2 & 2 = 2
go
declare 	indexes cursor for
select 		si.status,
			si.indid,
			so.name
from 		sysindexes si, 
			sysobjects so
where 		so.id = object_id('dbo.product')
and 		si.id = so.id
and 		si.indid > 0
and 		si.indid < 255
and 		si.status2 & 2 != 2
go
declare cprotect cursor for 
select case when p.protecttype<2 then 'grant' else 'revoke' end + ' '+
	case when p.action=151 then 'references'
					 when p.action=193 then 'select'
					 when p.action=195 then 'insert'
					 when p.action=196 then 'delete'
					 when p.action=197 then 'update'
					 when p.action=224 then 'execute'
				end + ' on dbo.product' as prefix,
	case when p.protecttype<2 then 'to' else 'from' end +' '+user_name(uid)+
		case when p.protecttype=0 then ' with grant option ' else ' ' end +
		'/*'+user_name(grantor)+'*/' suffix, 
	isnull(columns, 0x01 ) columns
	from sysprotects p
	where id=object_id('dbo.product')
	and p.action in (151,193,195,196,197,224)
	and p.protecttype in (0,1,2)
go 

declare @max_id_part int
declare @max_id_order int
insert into #tmp
select obj.id, 1, 0, 'create'+
case when sysstat2 & 1024 = 1024 then ' existing' else '' end 
+' table ' + user_name(obj.uid) +'.'+ obj.name + '(' 
from sysobjects obj
where obj.id=object_id('dbo.product')
order by obj.name

declare @prefix varchar(100)
declare @suffix varchar(100)
declare @columns binary(32)

declare @txt varchar(255)
declare @tabname varchar(255), @colname varchar(255), @coltype varchar(255), @default varchar(255)
declare @id int, @collength int, @isnull int, @isidentity int, @prec int, @scale int, @colid int
declare @cdefault int
open ccolumn
fetch ccolumn into @id, @tabname, @colname, @coltype, @collength, @isnull, @isidentity, @cdefault, @default, @prec, @scale, @colid
while (@@sqlstatus = 0) begin
	select @txt = '   '
	select @txt = @txt + @colname + '   ' + @coltype
	if (@coltype = 'char' or @coltype = 'varchar') select @txt = @txt + '('+convert(varchar(10),@collength)+')'
	if (@coltype like 'uni%char') select @txt = @txt + '('+convert(varchar(10),@collength/2)+')'
	if (@coltype in ('numeric','decimal')) select @txt = @txt + '('+convert(varchar(10),@prec)+','+convert(varchar(10),@scale)+')'
	if @default! = null select @txt = @txt + '  ' + @default
	if @default is null and @cdefault>0 begin
		select @default=u.name+'.'+o.name from sysobjects o,sysusers u where o.id=@cdefault and o.uid=u.uid
		insert into #tmp  values (@id, 6, @colid, 'exec sp_bindefault '''+@default+''', '''+@tabname+'.'+@colname+''''+char(10)+'go'+char(10) )
	end
	if @isidentity != 0 select @txt = @txt + '  identity'
		else if @isnull != 0 select @txt = @txt + '  null'
			else select @txt = @txt + '  not null'
	--select @txt = @txt + char(10)
	insert into #tmp  values (@id, 2, @colid, @txt)
	fetch ccolumn into @id, @tabname, @colname, @coltype, @collength, @isnull, @isidentity, @cdefault, @default, @prec, @scale, @colid
end
close ccolumn
deallocate cursor ccolumn
declare @indname varchar(255),  @index varchar(255), @index0 varchar(255), @objname varchar(255)
declare @cnt numeric, @indid numeric, @status int, @status2 int, @i int
open cindex
fetch cindex into @id, @indname, @cnt, @indid, @status, @status2
while (@@sqlstatus = 0) begin
	select @txt = '   constraint ' + @indname
	if (@status & 2048 = 2048) select @txt = @txt + ' primary key'
	else select @txt = @txt + ' unique'
	select @index = '', @i = 1
	select @objname = user_name(uid)+'.'+name from sysobjects where id = @id
	while @i <= @cnt
	begin
		select @index0=index_col(@objname, @indid, @i)
		if @index0 is not null begin
			if @i > 1 select @index = @index + ', '
			select @index = @index + @index0
		end
		select @i = @i + 1
	end
	if @indid = 1 select @txt = @txt + ' clustered'
	if @indid > 1
	begin
		if ( (@status & 16 = 16) or (@status2 & 512 = 512) ) select @txt = @txt + ' clustered'
		else select @txt = @txt + ' nonclustered'
	end
	select @txt =  @txt + ' ('+@index+' )'
	insert into #tmp  values (@id, 3, @indid, @txt)
	fetch cindex into @id, @indname, @cnt, @indid, @status, @status2
end
close cindex
deallocate cursor cindex
insert into #tmp
select obj.id, 4, 0, ')'
from sysobjects obj
where obj.id=object_id('dbo.product')

insert into #tmp
select obj.id, 4, 1, 'external '+
		case 
			when sa.object_info2=1 then 'table'
			when  sa.object_info2=2 then 'directory'
			when  sa.object_info2=3 then 'rpc'
			when  sa.object_info2=4 then 'file'
			when  sa.object_info2=5 then 'function'
			when  sa.object_info2=6 then 'internal'
			else '???'
		end + ' at ''' + sa.char_value + ''''
from sysobjects obj,sysattributes sa
where obj.id=object_id('dbo.product')
and obj.sysstat2 & 1024 = 1024
and sa.object=obj.id

select @max_id_part=max(id_part) from #tmp where id_part in (2,3)
select @max_id_order=max(id_order) from #tmp where id_part=@max_id_part
update #tmp set txt=txt+',' 
	where id_part in (2,3) 
	and not(id_part=@max_id_part and id_order=@max_id_order)
/*lock*/
insert into #tmp
select id,5,1,'alter table dbo.product lock allpages'+char(10)+'go'+char(10)
	from sysobjects where id=object_id('dbo.product') and sysstat2&8192=8192
insert into #tmp
select id,5,1,'alter table dbo.product lock datapages'+char(10)+'go'+char(10)
	from sysobjects where id=object_id('dbo.product') and sysstat2&16384=16384
insert into #tmp
select id,5,1,'alter table dbo.product lock datarows'+char(10)+'go'+char(10)
	from sysobjects where id=object_id('dbo.product') and sysstat2&32768=32768
/*protect*/

select @i=0

open cprotect
fetch cprotect into @prefix, @suffix, @columns

while @@sqlstatus=0 begin
	--processing selected row
	if @columns = 0x01 or @columns = 0x00 begin
		insert into #tmp
			select object_id('dbo.product'),6,@i,@prefix
		select @i=@i+1
		insert into #tmp
			select object_id('dbo.product'),6,@i,'   '+@suffix
	end else begin
		insert into #tmp
			select object_id('dbo.product'),6,@i,@prefix+' ('
		insert into #tmp
			select  object_id('dbo.product'),6,@i+colid,'      '+c.name+','
			from syscolumns c
			where c.id=object_id('dbo.product') 
			and convert(tinyint,substring(@columns,c.colid/8 +1,1 ) ) & power(2,c.colid%8)<>0
			order by c.colid
		
		select @i=max(id_order)+1 from #tmp where id_obj=object_id('dbo.product') and id_part=6
		--remove comma
		update #tmp set txt=substring(txt,1,char_length(txt)-1) 
			where id_obj=object_id('dbo.product') and id_part=6 and id_order=@i-1
		--add suffix
		insert into #tmp
			select object_id('dbo.product'),6,@i,'   ) '+@suffix
	end
	
	select @i=max(id_order)+1 from #tmp where id_obj=object_id('dbo.product') and id_part=6
	fetch cprotect into @prefix, @suffix, @columns
end
close cprotect
deallocate cursor cprotect


/*fkeys*/
insert into #tmp
select ref.tableid,4+fkobj.id,0,'alter table dbo.product'
	from sysreferences ref,sysobjects fkobj
	where fkobj.id =ref.constrid
	and fkobj.type='RI'
	and ref.tableid=object_id('dbo.product')
	and ref.pmrydbname is null
insert into #tmp
select ref.tableid,4+fkobj.id,1,
	'    add constraint '+fkobj.name+' foreign key ( '+ col_name(ref.tableid,ref.fokey1)+
	case when ref.fokey2 >0 then ',' else null end + col_name(ref.tableid,ref.fokey2 )+
	case when ref.fokey3 >0 then ',' else null end + col_name(ref.tableid,ref.fokey3 )+
	case when ref.fokey4 >0 then ',' else null end + col_name(ref.tableid,ref.fokey4 )+
	case when ref.fokey5 >0 then ',' else null end + col_name(ref.tableid,ref.fokey5 )+
	case when ref.fokey6 >0 then ',' else null end + col_name(ref.tableid,ref.fokey6 )+
	case when ref.fokey7 >0 then ',' else null end + col_name(ref.tableid,ref.fokey7 )+
	case when ref.fokey8 >0 then ',' else null end + col_name(ref.tableid,ref.fokey8 )+
	case when ref.fokey9 >0 then ',' else null end + col_name(ref.tableid,ref.fokey9 )+
	case when ref.fokey10>0 then ',' else null end + col_name(ref.tableid,ref.fokey10)+
	case when ref.fokey11>0 then ',' else null end + col_name(ref.tableid,ref.fokey11)+
	case when ref.fokey12>0 then ',' else null end + col_name(ref.tableid,ref.fokey12)+
	case when ref.fokey13>0 then ',' else null end + col_name(ref.tableid,ref.fokey13)+
	case when ref.fokey14>0 then ',' else null end + col_name(ref.tableid,ref.fokey14)+
	case when ref.fokey15>0 then ',' else null end + col_name(ref.tableid,ref.fokey15)+
	case when ref.fokey16>0 then ',' else null end + col_name(ref.tableid,ref.fokey16)+
	' )'
	from sysreferences ref,sysobjects fkobj
	where fkobj.id =ref.constrid
	and fkobj.type='RI'
	and ref.tableid=object_id('dbo.product')
	and ref.pmrydbname is null
insert into #tmp
select ref.tableid,4+fkobj.id,2,
	'    references '+user_name(reftab.uid)+'.'+reftab.name+' ( '+  col_name(ref.reftabid,ref.refkey1)+
	case when ref.refkey2 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey2 )+
	case when ref.refkey3 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey3 )+
	case when ref.refkey4 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey4 )+
	case when ref.refkey5 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey5 )+
	case when ref.refkey6 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey6 )+
	case when ref.refkey7 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey7 )+
	case when ref.refkey8 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey8 )+
	case when ref.refkey9 >0 then ',' else null end + col_name(ref.reftabid,ref.refkey9 )+
	case when ref.refkey10>0 then ',' else null end + col_name(ref.reftabid,ref.refkey10)+
	case when ref.refkey11>0 then ',' else null end + col_name(ref.reftabid,ref.refkey11)+
	case when ref.refkey12>0 then ',' else null end + col_name(ref.reftabid,ref.refkey12)+
	case when ref.refkey13>0 then ',' else null end + col_name(ref.reftabid,ref.refkey13)+
	case when ref.refkey14>0 then ',' else null end + col_name(ref.reftabid,ref.refkey14)+
	case when ref.refkey15>0 then ',' else null end + col_name(ref.reftabid,ref.refkey15)+
	case when ref.refkey16>0 then ',' else null end + col_name(ref.reftabid,ref.refkey16)+
	' )'
	from sysreferences ref,sysobjects fkobj,sysobjects reftab
	where fkobj.id =ref.constrid
	and reftab.id=ref.reftabid
	and fkobj.type='RI'
	and ref.tableid=object_id('dbo.product')
	and ref.pmrydbname is null

select @cdefault = max(id_part)+1 from #tmp
open indexes
fetch indexes into @status,@indid,@tabname
while @@sqlstatus = 0  begin


	select @txt = ''
	select @i =1 
	while @i <= 31
	begin
		select @txt = @txt + index_col('dbo.product', @indid, @i)+ ' ' + index_colorder('dbo.product', @indid, @i)
		if (index_col('dbo.product', @indid, @i+1) is null) break
		if @i >= 1 select @txt = @txt + ","
		select @i = @i + 1
	end
	
	select @txt=' (' +isnull(@txt,'') +')'

	insert into #tmp
	select 
		so.id,@cdefault,1,
		'create' +	case si.status & 2 when 2 then ' unique ' else ' ' end +
		case (si.status & 16) + (si.status2 & 512) when 0 then 'nonclustered' else 'clustered' end +
		' index ' +	si.name + ' on ' + su.name + '.'+so.name +@txt
	from sysindexes si, sysobjects so, sysusers su
	where 
		so.id = object_id('dbo.product')
		and so.type = 'U'
		and so.uid = su.uid 
		and si.indid = @indid
		and si.id = so.id
		and si.indid > 0
		and si.indid < 255
		and si.status2 & 2 != 2

	if @status & 1 = 1 select @default = 'ignore_dup_key'
	if @status & 4 = 4 select @default = 'ignore_dup_row'
	if @status & 64 = 64  select @default = 'allow_dup_row'
	
	if isNull(@default,'')!=''
		insert into #tmp
			select object_id(@tabname),@cdefault,3,char(9)+"with " + @default

	select @cdefault = @cdefault + 1
	fetch indexes into @status,@indid,@tabname
end
close indexes
deallocate cursor indexes

select txt from #tmp order by  id_obj, id_part, id_order
drop table #tmp
go
set nocount off
go
