scp = secure copy

In Unix, you can use SCP (the scp command) to securely copy files and directories between remote hosts without starting an FTP session or logging into the remote systems explicitly. The scp command uses SSH to transfer data, so it requires a password or passphrase for authentication. Unlike rcp or FTP, SCP encrypts both the file and any passwords exchanged so that anyone snooping on the network cannot view them.

The scp utility copies files between hosts on a network.  It
     uses ssh for data transfer, and uses the same authentica-
     tion and  provides  the  same  security  as  ssh.  Unlike
     rcp,  scp  will  ask for passwords or passphrases if they
     are needed for authentication.

     Any file name may contain a host and user  specification  to
     indicate  that  the  file is to be copied to/from that host.
     Copies between two remote hosts are permitted.



scp <source_file> <dest_file>

source_file
	user_account@host_name:file_path

dest_file
	user_account@host_name:file_path

e.g.:
	scp user_name@server_name:file_path ./
	scp Results_of_Trade.xlsm lonss00049:/home/user_id/

To preserve modification  times, access times, and modes from the original file:
scp -p <source_file> <dest_file>

To copy a directory:
scp -r src_dir dest_dir

Verbose mode. Causes scp and  ssh  to print  debugging  messages  about  their progress.
scp -v <source_file> <dest_file>


NOTES
     Generally, use of scp with password or  keyboard-interactive
     authentication   method  and two remote hosts does not work.
     It does work with either the pubkey,  hostbased  or  gssapi-
     keyex  authentication  method. For the pubkey authentication
     method, either private keys not protected by  a  passphrase,
     or  an  explicit  ssh  agent forwarding have to be used. The
     gssapi-keyex   authentication   method    works   with   the
     kerberos_v5  GSS-API  mechanism,  but  only  if  the GSSAPI-
     DelegateCredentials option is enabled.

